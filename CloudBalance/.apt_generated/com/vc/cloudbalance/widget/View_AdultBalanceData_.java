//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.1.
//


package com.vc.cloudbalance.widget;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.vc.cloudbalance.R.id;
import com.vc.cloudbalance.R.layout;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class View_AdultBalanceData_
    extends View_AdultBalanceData
    implements HasViews, OnViewChangedListener
{

    private boolean alreadyInflated_ = false;
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    public View_AdultBalanceData_(Context context) {
        super(context);
        init_();
    }

    public View_AdultBalanceData_(Context context, AttributeSet attrs) {
        super(context, attrs);
        init_();
    }

    public static View_AdultBalanceData build(Context context) {
        View_AdultBalanceData_ instance = new View_AdultBalanceData_(context);
        instance.onFinishInflate();
        return instance;
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!alreadyInflated_) {
            alreadyInflated_ = true;
            inflate(getContext(), layout.view_adultbalancedata, this);
            onViewChangedNotifier_.notifyViewChanged(this);
        }
        super.onFinishInflate();
    }

    private void init_() {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    public static View_AdultBalanceData build(Context context, AttributeSet attrs) {
        View_AdultBalanceData_ instance = new View_AdultBalanceData_(context, attrs);
        instance.onFinishInflate();
        return instance;
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        tvBottomLeft_2 = ((TextView) hasViews.findViewById(id.tvBottomLeft_2));
        tvLeftText = ((TextView) hasViews.findViewById(id.tvLeftText));
        tvTopRight_3 = ((TextView) hasViews.findViewById(id.tvTopRight_3));
        tvTopLeft_2 = ((TextView) hasViews.findViewById(id.tvTopLeft_2));
        tvMiddleVal = ((TextView) hasViews.findViewById(id.tvMiddleVal));
        imgRightUp = ((ImageView) hasViews.findViewById(id.imgRightUp));
        btnRank = ((Button) hasViews.findViewById(id.btnRank));
        btnSuggest = ((Button) hasViews.findViewById(id.btnSuggest));
        tvTopLeft_3 = ((TextView) hasViews.findViewById(id.tvTopLeft_3));
        tvMiddleVal_2 = ((TextView) hasViews.findViewById(id.tvMiddleVal_2));
        tvBottomRight_1 = ((TextView) hasViews.findViewById(id.tvBottomRight_1));
        tvBottomLeft_3 = ((TextView) hasViews.findViewById(id.tvBottomLeft_3));
        tvMsg = ((TextView) hasViews.findViewById(id.tvMsg));
        llRightPanel = ((LinearLayout) hasViews.findViewById(id.llRightPanel));
        rlRoot = ((RelativeLayout) hasViews.findViewById(id.rlRoot));
        tvMiddlePercent = ((TextView) hasViews.findViewById(id.tvMiddlePercent));
        tvTopRight_1 = ((TextView) hasViews.findViewById(id.tvTopRight_1));
        tvTopLeft_1 = ((TextView) hasViews.findViewById(id.tvTopLeft_1));
        llUpPanelBottomRight = ((LinearLayout) hasViews.findViewById(id.llUpPanelBottomRight));
        tvBottomRight_3 = ((TextView) hasViews.findViewById(id.tvBottomRight_3));
        tvBottomLeft_1 = ((TextView) hasViews.findViewById(id.tvBottomLeft_1));
        llUpPanelBottomLeft = ((LinearLayout) hasViews.findViewById(id.llUpPanelBottomLeft));
        llUpPanelTopRight = ((LinearLayout) hasViews.findViewById(id.llUpPanelTopRight));
        rlPanel = ((RelativeLayout) hasViews.findViewById(id.rlPanel));
        tvTopRight_2 = ((TextView) hasViews.findViewById(id.tvTopRight_2));
        tvBottomRight_2 = ((TextView) hasViews.findViewById(id.tvBottomRight_2));
        tvRightText = ((TextView) hasViews.findViewById(id.tvRightText));
        imgLeftUp = ((ImageView) hasViews.findViewById(id.imgLeftUp));
        llUpPanelTopLeft = ((LinearLayout) hasViews.findViewById(id.llUpPanelTopLeft));
        llLeftPanel = ((LinearLayout) hasViews.findViewById(id.llLeftPanel));
        llBigCircle = ((LinearLayout) hasViews.findViewById(id.llBigCircle));
        if (btnSuggest!= null) {
            btnSuggest.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    View_AdultBalanceData_.this.showSuggest();
                }

            }
            );
        }
        if (btnRank!= null) {
            btnRank.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    View_AdultBalanceData_.this.showRank();
                }

            }
            );
        }
        init();
    }

}
